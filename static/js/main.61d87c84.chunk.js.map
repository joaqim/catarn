{"version":3,"sources":["api.js","components/BalancedDice.tsx","components/reducers/diceReducer.jsx","components/contexts/diceContext.js","components/DiceGraph.js","App.js","reportWebVitals.js","index.js"],"names":["openSocket","WeightedDiceDeckController","minimumCardsBeforeReshuffling","probabilityReductionForRecentlyRolled","weightedDiceDeck","cardsLeftInDeck","recentRolls","maximumRecentRollMemory","initWeightedDiceDeck","reshuffleWeightedDiceDeck","updateWeightedDiceDeckProbabilities","this","drawWeightedCard","adjustWeightedDiceDeckBasedOnRecentRolls","getWeightedDice","push","totalDice","dicePairs","probabilityWeighting","recentlyRolledCount","standardDiceDeck","getStandardDiceDeck","entries","totalDiceIndex","dicePairsForTotalDice","diceDeckForTotalDice","length","array","totalProbabilityWeight","getTotalProbabilityWeight","targetRandomNumber","Math","random","drawnCard","floor","removeElementFromArray","updateRecentlyRolled","dice1","dice2","totalDiceFiveRollsAgo","shift","probabilityMultiplier","element","index","indexOf","splice","diceReducer","state","action","dice","count","type","payload","value","filter","_","Array","fill","map","e","Error","diceContext","createContext","initialState","DiceContextProvider","children","useReducer","dispatch","contextValue","useMemo","Provider","DiceGraph","style","width","height","position","data","props","margin","top","right","bottom","left","stroke","dataKey","allowDecimals","domain","tickFormatter","tick","barSize","PureComponent","App","useContext","diceController","rollDice","x","i","d","throwDice","y","rollDiceNaive","useEffect","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOACeA,GAAW,yB,oDCoBbC,EAAb,kDASE,aAAe,IAAD,8BACZ,gBATeC,mCAQH,IAPGC,2CAOH,IALNC,sBAKM,IAJNC,qBAIM,IAHNC,iBAGM,IAFNC,6BAEM,EAEZ,EAAKC,uBACL,EAAKC,4BACL,EAAKC,sCAEL,EAAKR,8BAAgC,GACrC,EAAKC,sCAAwC,GAE7C,EAAKG,YAAc,GACnB,EAAKC,wBAA0B,EAVnB,EAThB,wDAuBI,OAAOI,KAAKC,qBAvBhB,yCA+BI,OAJID,KAAKN,gBAAkBM,KAAKT,+BAC9BS,KAAKF,4BACPE,KAAKD,sCACLC,KAAKE,2CACEF,KAAKG,oBA/BhB,6CAmCIH,KAAKP,iBAAmB,GACxBO,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,EACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,GACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,GACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,IAEvBR,KAAKP,iBAAiBW,KAAK,CACzBC,UAAW,GACXC,UAAW,GACXC,qBAAsB,EACtBC,oBAAqB,MApG3B,kDAyGI,IADkC,EAC5BC,EAAmBT,KAAKU,sBADI,cAM7BD,EAAiBE,WANY,IAGlC,2BAGiC,CAAC,IAAD,yBAF/BC,EAE+B,KAD/BC,EAC+B,KAC/Bb,KAAKP,iBAAiBmB,GAAgBN,UACpCO,EAAsBP,WARQ,8BAYlCN,KAAKN,gBADqB,KAnH9B,4DAuHiD,IAAD,gBACTM,KAAKP,kBADI,IAC5C,2BAA0D,CAAC,IAAhDqB,EAA+C,QACxDA,EAAqBP,qBACnBO,EAAqBR,UAAUS,OAASf,KAAKN,iBAHL,iCAvHhD,wCA+HI,IADmC,EAsJGsB,EArJhCC,EAAyBjB,KAAKkB,4BAEhCC,EAAqBC,KAAKC,SAAWJ,EAHN,cAIAjB,KAAKP,kBAJL,IAInC,2BAA0D,CAAC,IAAhDqB,EAA+C,QACxD,GAAIK,GAAsBL,EAAqBP,qBAAsB,CACnE,IAAMe,GAgJ4BN,EA/IhCF,EAAqBR,WAgJhBc,KAAKG,MAAMH,KAAKC,SAAWL,EAAMD,SAtIxC,OARAS,EAAuBV,EAAqBR,UAAWgB,GAEvDtB,KAAKL,YAAYS,KAAKU,EAAqBT,WAC3CS,EAAqBN,sBACrBR,KAAKN,kBAEDM,KAAKL,YAAYoB,OAASf,KAAKJ,yBACjCI,KAAKyB,uBACAH,EAETH,GAAsBL,EAAqBP,sBAnBV,8BAwBnC,MAD2B,CAAEmB,MAAO,EAAGC,MAAO,KArJlD,kDA0JI,IAD0C,EACtCV,EAAyB,EADa,cAElBjB,KAAKP,kBAFa,IAE1C,2BAA+C,CAC7CwB,GAD6C,QACTV,sBAHI,8BAM1C,OAAOU,IA/JX,6CAmKI,IACMW,EAAwB5B,KAAKL,YAAY,GAC/CK,KAAKP,iBAAiBmC,EAFF,GAGjBpB,sBACHR,KAAKL,YAAYkC,UAvKrB,iEA0KsD,IAAD,gBACd7B,KAAKP,kBADS,IACjD,2BAA0D,CAAC,IAAhDqB,EAA+C,QAIlDgB,EAAwB,EAF5BhB,EAAqBN,oBACrBR,KAAKR,sCAEPsB,EAAqBP,sBAAwBuB,EACzChB,EAAqBP,qBAAuB,IAC9CO,EAAqBP,qBAAuB,IARC,iCA1KrD,4CAuLI,IAAME,EAAwC,GAyF9C,OAxFAA,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CAAC,CAAEoB,MAAO,EAAGC,MAAO,MAEjClB,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,EACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,GACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,GACXC,UAAW,CACT,CAAEoB,MAAO,EAAGC,MAAO,GACnB,CAAED,MAAO,EAAGC,MAAO,MAGvBlB,EAAiBL,KAAK,CACpBC,UAAW,GACXC,UAAW,CAAC,CAAEoB,MAAO,EAAGC,MAAO,MAG1BlB,MAhRX,IAJA,oCA4RO,SAASe,EAA0BR,EAAYe,GACpD,IAAMC,EAAQhB,EAAMiB,QAAQF,GAC5B,OAAIC,GAAS,IACXhB,EAAMkB,OAAOF,EAAO,IACb,G,YCjTEG,EAAc,SAACC,EAAOC,GAAY,IAEzCC,EACAC,EAFIC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAId,OAAQD,GACN,IAAK,MAIH,OAHAF,EAAI,sBAAOF,EAAME,MAAb,CAAmBG,KACvBF,EAAK,YAAOH,EAAMG,QACZE,EAAQC,OAAOH,OAAS,EACvB,CACLD,OACAC,SASJ,IAAK,SAIH,OAHAD,EAAO,YAAIF,EAAME,MAAMK,QAAO,SAACC,EAAGZ,GAAJ,OAAcA,IAAUS,EAAQT,UAC9DO,EAAK,YAAOH,EAAMG,QACZH,EAAME,KAAKG,EAAQT,OAAOU,OAAOH,OAAS,EACzC,CAAED,OAAMC,SAEjB,IAAK,QACH,MAAO,CACLD,KAAM,GACNC,MAAOM,MAAM,IACVC,KAAK,CAAEP,MAAO,EAAGG,MAAO,IACxBK,KAAI,SAACC,EAAGhB,GAAJ,MAAmB,CAAEU,MAAOV,EAAOO,MAAO,OAErD,QACE,MAAM,IAAIU,QChCHC,EAAcC,0BAErBC,EAAe,CACnBd,KAAM,GACNC,MAAOM,MAAM,IACVC,KAAK,CAAEP,MAAO,EAAGG,MAAO,IACxBK,KAAI,SAACC,EAAGhB,GAAJ,MAAmB,CAAEU,MAAOV,EAAOO,MAAO,OAapCc,EAVa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,qBAAWpB,EAAaiB,GADN,mBACrChB,EADqC,KAC9BoB,EAD8B,KAGtCC,EAAeC,mBAAQ,iBAAO,CAAEtB,QAAOoB,cAAa,CAACpB,EAAOoB,IAElE,OACE,cAACN,EAAYS,SAAb,CAAsBjB,MAAOe,EAA7B,SAA4CH,K,0ICJ3BM,G,6KAEjB,OACE,qBAAKC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,IAAKC,SAAU,UAAnD,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEF,MAAO,OACPC,OAAQ,OACRE,KAAMjE,KAAKkE,MAAM3B,MACjB4B,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IARV,UAWE,cAAC,IAAD,CAAeC,OAAO,YACtB,cAAC,IAAD,CAAOC,QAAQ,QAAQjC,KAAK,SAASkC,eAAe,IACpD,cAAC,IAAD,CACED,QAAQ,QACRE,OAAQ,CAAC,EAAG,IACZC,cAAe,SAACC,GACd,OAAIA,GAAQ,EACHA,EAEF,SAGX,cAAC,IAAD,IAEA,cAAC,IAAD,CACEJ,QAAS,QACTG,cAAe,SAACC,GAAD,OAAUA,GACzBC,QAAS,GACThC,KAAK,uB,GAlCoBiC,kBCDvC,IA2GeC,EA3GH,WAAO,IAAD,EAIZC,qBAAW/B,GAJC,IAEdd,MAASE,EAFK,EAELA,KAAMC,EAFD,EAECA,MACfiB,EAHc,EAGdA,SAII0B,EAAiB,IAAI5F,EAW3B,SAAS6F,IACP,IADwB,IAARC,EAAO,uDAAH,EACXC,EAAI,EAAGA,GAAKD,EAAI,EAAGC,IAAK,CAC/B,IAAMC,EAAIJ,EAAeK,YACnB7D,EAAQ4D,EAAE5D,MACVC,EAAQ2D,EAAE3D,MAChB6B,EAAS,CACPhB,KAAM,MACNC,QAAS,CACPT,MAAOM,EAAOA,EAAKvB,OAAS,EAAI,EAChCqE,EAAG1D,EACH8D,EAAG7D,EACHe,MAAOhB,EAAQC,MAMvB,SAAS8D,IACP,IAD6B,IAARL,EAAO,uDAAH,EAChBC,EAAI,EAAGA,GAAKD,EAAI,EAAGC,IAAK,CAC/B,IAAM3D,EAAQN,KAAKG,MAAsB,EAAhBH,KAAKC,SAAe,GACvCM,EAAQP,KAAKG,MAAsB,EAAhBH,KAAKC,SAAe,GAC7CmC,EAAS,CACPhB,KAAM,MACNC,QAAS,CACPT,MAAOM,EAAOA,EAAKvB,OAAS,EAAI,EAChCqE,EAAG1D,EACH8D,EAAG7D,EACHe,MAAOhB,EAAQC,MAMvB,OAzCA+D,qBAAU,WAKRP,EAAS,OACR,IAoCD,qCACE,cAAC,EAAD,CACE7C,KAAMA,EACNC,MAAOA,IAIT,sBAAKoD,UAAU,MAAf,UACE,8CAAiBrD,EAAKvB,UACtB,wBAAQ6E,QAAS,kBAAMpC,EAAS,CAAEhB,KAAM,WAAxC,yBACCF,EAAKvB,OAAS,EACb,wBACE6E,QAAS,kBACPpC,EAAS,CAAEhB,KAAM,SAAUC,QAAS,CAAET,MAAOM,EAAKvB,OAAS,MAF/D,uBAOE,KACJ,sBACA,wBAAQ6E,QAAS,kBAAMT,KAAvB,uBACA,wBAAQS,QAAS,kBAAMT,EAAS,KAAhC,qBACA,wBAAQS,QAAS,kBAAMT,EAAS,KAAhC,qBACA,wBAAQS,QAAS,kBAAMT,EAAS,KAAhC,sBACA,yCACA,wBAAQS,QAAS,kBAAMH,KAAvB,uBACA,wBAAQG,QAAS,kBAAMH,EAAc,KAArC,qBACA,wBAAQG,QAAS,kBAAMH,EAAc,KAArC,qBACA,wBAAQG,QAAS,kBAAMH,EAAc,KAArC,sBAEA,sBACA,8BAeM,OAEN,wBAAQE,UAAU,eAClB,oBAAGA,UAAU,YAAb,0CA/FY,iBCPLE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61d87c84.chunk.js","sourcesContent":["import openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:8000\");\n\nexport function subscribeToTimer(cb) {\n  socket.on(\"timer\", (timestamp) => cb(null, timestamp));\n  socket.emit(\"subscribeToTimer\", 1000);\n}\n\nexport function onConnected() {\n  console.log(socket.io.engine.id);\n  console.log(socket.sessionid);\n}\n\nexport function hostCreateNewGame() {\n  socket.emit(\"hostCreateNewGame\");\n}\n\nexport function playerJoinGame(color = \"magenta\") {\n  //console.log(color);\n  socket.emit(\"playerJoinGame\", color);\n}\n","interface IStandardDiceDeck {\n  totalDice: number;\n  dicePairs: IDicePair[];\n}\n\ninterface IWeightedDiceDeck {\n  totalDice: number;\n  dicePairs: IDicePair[];\n  probabilityWeighting: number;\n  recentlyRolledCount: number;\n}\n\nexport interface IDicePair {\n  dice1: number;\n  dice2: number;\n}\n\nexport abstract class DiceController {\n  abstract throwDice(): IDicePair;\n}\n\nexport class WeightedDiceDeckController extends DiceController {\n  private readonly minimumCardsBeforeReshuffling: number;\n  private readonly probabilityReductionForRecentlyRolled: number;\n\n  private weightedDiceDeck: IWeightedDiceDeck[];\n  private cardsLeftInDeck: number;\n  private recentRolls: number[];\n  private maximumRecentRollMemory: number;\n\n  constructor() {\n    super();\n    this.initWeightedDiceDeck();\n    this.reshuffleWeightedDiceDeck();\n    this.updateWeightedDiceDeckProbabilities();\n\n    this.minimumCardsBeforeReshuffling = 13;\n    this.probabilityReductionForRecentlyRolled = 0.3;\n\n    this.recentRolls = [];\n    this.maximumRecentRollMemory = 5;\n  }\n\n  throwDice(): IDicePair {\n    return this.drawWeightedCard();\n  }\n\n  private drawWeightedCard(): IDicePair {\n    if (this.cardsLeftInDeck < this.minimumCardsBeforeReshuffling)\n      this.reshuffleWeightedDiceDeck();\n    this.updateWeightedDiceDeckProbabilities();\n    this.adjustWeightedDiceDeckBasedOnRecentRolls();\n    return this.getWeightedDice();\n  }\n\n  private initWeightedDiceDeck() {\n    this.weightedDiceDeck = [];\n    this.weightedDiceDeck.push({\n      totalDice: 2,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 3,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 4,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 5,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 6,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 7,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 8,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 9,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 10,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 11,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n    this.weightedDiceDeck.push({\n      totalDice: 12,\n      dicePairs: [],\n      probabilityWeighting: 0,\n      recentlyRolledCount: 0,\n    });\n  }\n\n  private reshuffleWeightedDiceDeck() {\n    const standardDiceDeck = this.getStandardDiceDeck();\n\n    for (const [\n      totalDiceIndex,\n      dicePairsForTotalDice,\n    ] of standardDiceDeck.entries()) {\n      this.weightedDiceDeck[totalDiceIndex].dicePairs =\n        dicePairsForTotalDice.dicePairs;\n    }\n\n    const totalCombinations = 36;\n    this.cardsLeftInDeck = totalCombinations;\n  }\n\n  private updateWeightedDiceDeckProbabilities() {\n    for (const diceDeckForTotalDice of this.weightedDiceDeck) {\n      diceDeckForTotalDice.probabilityWeighting =\n        diceDeckForTotalDice.dicePairs.length / this.cardsLeftInDeck;\n    }\n  }\n\n  private getWeightedDice(): IDicePair {\n    const totalProbabilityWeight = this.getTotalProbabilityWeight();\n\n    let targetRandomNumber = Math.random() * totalProbabilityWeight;\n    for (const diceDeckForTotalDice of this.weightedDiceDeck) {\n      if (targetRandomNumber <= diceDeckForTotalDice.probabilityWeighting) {\n        const drawnCard = randomElementFromArray(\n          diceDeckForTotalDice.dicePairs\n        );\n        removeElementFromArray(diceDeckForTotalDice.dicePairs, drawnCard);\n\n        this.recentRolls.push(diceDeckForTotalDice.totalDice);\n        diceDeckForTotalDice.recentlyRolledCount++;\n        this.cardsLeftInDeck--;\n\n        if (this.recentRolls.length > this.maximumRecentRollMemory)\n          this.updateRecentlyRolled();\n        return drawnCard;\n      }\n      targetRandomNumber -= diceDeckForTotalDice.probabilityWeighting;\n    }\n\n    //JL4('Something seriously wrong with weighted dice deck')\n    const defaultRollIfError = { dice1: 3, dice2: 4 };\n    return defaultRollIfError;\n  }\n\n  private getTotalProbabilityWeight(): number {\n    let totalProbabilityWeight = 0;\n    for (const dicePairs of this.weightedDiceDeck) {\n      totalProbabilityWeight += dicePairs.probabilityWeighting;\n    }\n\n    return totalProbabilityWeight;\n  }\n\n  private updateRecentlyRolled() {\n    const ignore0and1 = 2;\n    const totalDiceFiveRollsAgo = this.recentRolls[0];\n    this.weightedDiceDeck[totalDiceFiveRollsAgo - ignore0and1]\n      .recentlyRolledCount--;\n    this.recentRolls.shift();\n  }\n\n  private adjustWeightedDiceDeckBasedOnRecentRolls() {\n    for (const diceDeckForTotalDice of this.weightedDiceDeck) {\n      const probabilityReduction =\n        diceDeckForTotalDice.recentlyRolledCount *\n        this.probabilityReductionForRecentlyRolled;\n      const probabilityMultiplier = 1 - probabilityReduction;\n      diceDeckForTotalDice.probabilityWeighting *= probabilityMultiplier;\n      if (diceDeckForTotalDice.probabilityWeighting < 0)\n        diceDeckForTotalDice.probabilityWeighting = 0;\n    }\n  }\n\n  private getStandardDiceDeck(): IStandardDiceDeck[] {\n    const standardDiceDeck: IStandardDiceDeck[] = [];\n    standardDiceDeck.push({\n      totalDice: 2,\n      dicePairs: [{ dice1: 1, dice2: 1 }],\n    });\n    standardDiceDeck.push({\n      totalDice: 3,\n      dicePairs: [\n        { dice1: 1, dice2: 2 },\n        { dice1: 2, dice2: 1 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 4,\n      dicePairs: [\n        { dice1: 1, dice2: 3 },\n        { dice1: 2, dice2: 2 },\n        { dice1: 3, dice2: 1 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 5,\n      dicePairs: [\n        { dice1: 1, dice2: 4 },\n        { dice1: 2, dice2: 3 },\n        { dice1: 3, dice2: 2 },\n        { dice1: 4, dice2: 1 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 6,\n      dicePairs: [\n        { dice1: 1, dice2: 5 },\n        { dice1: 2, dice2: 4 },\n        { dice1: 3, dice2: 3 },\n        { dice1: 4, dice2: 2 },\n        { dice1: 5, dice2: 1 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 7,\n      dicePairs: [\n        { dice1: 1, dice2: 6 },\n        { dice1: 2, dice2: 5 },\n        { dice1: 3, dice2: 4 },\n        { dice1: 4, dice2: 3 },\n        { dice1: 5, dice2: 2 },\n        { dice1: 6, dice2: 1 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 8,\n      dicePairs: [\n        { dice1: 2, dice2: 6 },\n        { dice1: 3, dice2: 5 },\n        { dice1: 4, dice2: 4 },\n        { dice1: 5, dice2: 3 },\n        { dice1: 6, dice2: 2 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 9,\n      dicePairs: [\n        { dice1: 3, dice2: 6 },\n        { dice1: 4, dice2: 5 },\n        { dice1: 5, dice2: 4 },\n        { dice1: 6, dice2: 3 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 10,\n      dicePairs: [\n        { dice1: 4, dice2: 6 },\n        { dice1: 5, dice2: 5 },\n        { dice1: 6, dice2: 4 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 11,\n      dicePairs: [\n        { dice1: 5, dice2: 6 },\n        { dice1: 6, dice2: 5 },\n      ],\n    });\n    standardDiceDeck.push({\n      totalDice: 12,\n      dicePairs: [{ dice1: 6, dice2: 6 }],\n    });\n\n    return standardDiceDeck;\n  }\n}\n\nexport function randomElementFromArray<T>(array: T[]): T {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function removeElementFromArray<T>(array: T[], element: T): boolean {\n  const index = array.indexOf(element);\n  if (index > -1) {\n    array.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n","export const diceReducer = (state, action) => {\n  const { type, payload } = action;\n  let dice;\n  let count;\n\n  switch (type) {\n    case \"add\":\n      dice = [...state.dice, payload];\n      count = [...state.count];\n      count[payload.value].count += 1;\n      return {\n        dice,\n        count,\n        /*\n        count: {\n          ...state.count,\n          [payload.value]: state.count[payload.value],\n        },\n        */\n      };\n    //return { ...state.dice, dice: payload };\n    case \"remove\":\n      dice = [...state.dice].filter((_, index) => index !== payload.index);\n      count = [...state.count];\n      count[state.dice[payload.index].value].count -= 1;\n      return { dice, count };\n    //return { ...state.dice.filter((_, index) => index !== payload.index) };\n    case \"clear\":\n      return {\n        dice: [],\n        count: Array(13)\n          .fill({ count: 0, value: 0 })\n          .map((e, index) => (e = { value: index, count: 0 })),\n      };\n    default:\n      throw new Error();\n  }\n};\n","import React, { createContext, useReducer, useMemo } from \"react\";\nimport { diceReducer } from \"../reducers/diceReducer\";\n\nexport const diceContext = createContext();\n\nconst initialState = {\n  dice: [],\n  count: Array(13)\n    .fill({ count: 0, value: 0 })\n    .map((e, index) => (e = { value: index, count: 0 })),\n};\n\nconst DiceContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(diceReducer, initialState);\n\n  const contextValue = useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n  return (\n    <diceContext.Provider value={contextValue}>{children}</diceContext.Provider>\n  );\n};\n\nexport default DiceContextProvider;\n","import React, { PureComponent } from \"react\";\nimport ResponsiveContainer from \"@bit/recharts.recharts.responsive-container\";\nimport ComposedChart from \"@bit/recharts.recharts.composed-chart\";\nimport Line from \"@bit/recharts.recharts.line\";\nimport Area from \"@bit/recharts.recharts.area\";\nimport Bar from \"@bit/recharts.recharts.bar\";\nimport XAxis from \"@bit/recharts.recharts.x-axis\";\nimport YAxis from \"@bit/recharts.recharts.y-axis\";\nimport CartesianGrid from \"@bit/recharts.recharts.cartesian-grid\";\nimport Tooltip from \"@bit/recharts.recharts.tooltip\";\nimport Legend from \"@bit/recharts.recharts.legend\";\n\nconst diceCol = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nexport default class DiceGraph extends PureComponent {\n  render() {\n    return (\n      <div style={{ width: \"60%\", height: 300, position: \"center\" }}>\n        <ResponsiveContainer>\n          <ComposedChart\n            width={\"100%\"}\n            height={\"100%\"}\n            data={this.props.count}\n            margin={{\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: 20,\n            }}\n          >\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <YAxis dataKey=\"count\" type=\"number\" allowDecimals={false} />\n            <XAxis\n              dataKey=\"value\"\n              domain={[2, 12]}\n              tickFormatter={(tick) => {\n                if (tick >= 2) {\n                  return tick;\n                }\n                return \"N/A\";\n              }}\n            />\n            <Tooltip />\n            {/*<Legend />*/}\n            <Bar\n              dataKey={\"count\"}\n              tickFormatter={(tick) => tick}\n              barSize={20}\n              fill=\"#413ea0\"\n            />\n            {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />*/}\n          </ComposedChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { subscribeToTimer } from \"./api\";\n\nimport { WeightedDiceDeckController } from \"./components/BalancedDice\";\nimport { diceContext } from \"./components/contexts/diceContext\";\nimport DiceGraph from \"./components/DiceGraph\";\n\nfunction timeout(delay) {\n  return new Promise((res) => setTimeout(res, delay));\n}\n\n//function App() {\nconst App = () => {\n  const {\n    state: { dice, count },\n    dispatch,\n  } = useContext(diceContext);\n\n  const timestamp = \"NULL\";\n  const diceController = new WeightedDiceDeckController();\n  //const [timestamp, setTimestamp] = useState(\"NULL\");\n\n  useEffect(() => {\n    //const diceResult = dice.throwDice();\n    //console.log(JSON.stringify(dice));\n    //payload: { dice: { x: diceResult.dice1, y: diceResult.dice2 } },\n    //subscribeToTimer((_err, timestamp) => setTimestamp(timestamp));\n    rollDice(100);\n  }, []);\n\n  function rollDice(x = 1) {\n    for (var i = 0; i <= x - 1; i++) {\n      const d = diceController.throwDice();\n      const dice1 = d.dice1;\n      const dice2 = d.dice2;\n      dispatch({\n        type: \"add\",\n        payload: {\n          index: dice ? dice.length + 1 : 0,\n          x: dice1,\n          y: dice2,\n          value: dice1 + dice2,\n        },\n      });\n    }\n  }\n\n  function rollDiceNaive(x = 1) {\n    for (var i = 0; i <= x - 1; i++) {\n      const dice1 = Math.floor(Math.random() * 6 + 1);\n      const dice2 = Math.floor(Math.random() * 6 + 1);\n      dispatch({\n        type: \"add\",\n        payload: {\n          index: dice ? dice.length + 1 : 0,\n          x: dice1,\n          y: dice2,\n          value: dice1 + dice2,\n        },\n      });\n    }\n  }\n  //const listItems = dice.map((d) => <li key={d.index}></li>);\n  return (\n    <>\n      <DiceGraph\n        dice={dice}\n        count={count}\n        //count={Object.entries(count).map((e) => ({ [e[0]]: e[1] }))}\n      />\n\n      <div className=\"App\">\n        <p>Total rolls: {dice.length}</p>\n        <button onClick={() => dispatch({ type: \"clear\" })}>Clear rolls</button>\n        {dice.length > 0 ? (\n          <button\n            onClick={() =>\n              dispatch({ type: \"remove\", payload: { index: dice.length - 1 } })\n            }\n          >\n            Undo Roll\n          </button>\n        ) : null}\n        <p />\n        <button onClick={() => rollDice()}>Roll Dice</button>\n        <button onClick={() => rollDice(10)}>Roll 10</button>\n        <button onClick={() => rollDice(50)}>Roll 50</button>\n        <button onClick={() => rollDice(50)}>Roll 100</button>\n        <p>No bias:</p>\n        <button onClick={() => rollDiceNaive()}>Roll Dice</button>\n        <button onClick={() => rollDiceNaive(10)}>Roll 10</button>\n        <button onClick={() => rollDiceNaive(50)}>Roll 50</button>\n        <button onClick={() => rollDiceNaive(50)}>Roll 100</button>\n\n        <p />\n        <div>\n          {false\n            ? dice.map((item, index) => (\n                <h2 key={index}>\n                  {item.x + item.y}\n                  <button\n                    key={index}\n                    onClick={() =>\n                      dispatch({ type: \"remove\", payload: { index: index } })\n                    }\n                  >\n                    Remove\n                  </button>\n                </h2>\n              ))\n            : null}\n        </div>\n        <header className=\"App-header\"></header>\n        <p className=\"App-intro\">This is the timestamp value: {timestamp}</p>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DiceContextProvider from \"./components/contexts/diceContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DiceContextProvider>\n      <App />\n    </DiceContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}